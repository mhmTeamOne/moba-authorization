quarkus.http.port=8081

# Request/Response Filter Configuration
app.filter.logging-enabled=false
app.filter.security-headers-enabled=true
app.filter.cors-enabled=true
app.filter.performance-monitoring-enabled=true
app.filter.cors-allowed-origins=*
app.filter.cors-allowed-methods=GET, POST, PUT, DELETE, OPTIONS
app.filter.cors-allowed-headers=Origin, Content-Type, Accept, Authorization, X-Requested-With
app.filter.cors-max-age=3600
app.filter.request-id-header=X-Request-ID

# Rate Limiting Configuration
app.rate-limit.enabled=false
app.rate-limit.max-requests-per-minute=60
app.rate-limit.max-requests-per-hour=1000
app.rate-limit.cleanup-interval-minutes=5

# Authentication Configuration
app.auth.enabled=false
app.auth.jwt-secret=mySecretKeyThatShouldBeExternalizedInProductionEnvironment
app.auth.token-expiration-hours=24

# Debug Configuration
app.debug.body-logging=false
app.debug.authentication-logging=false
app.debug.include-stack-trace=false
app.debug.detailed-error-messages=false

# Twilio SendGrid Configuration
sendgrid.api.key=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
sendgrid.from.email=jankerov@gmail.com
sendgrid.from.name=MOBA

# Camel Configuration
camel.main.name=moba-authorization-camel
camel.main.stream-caching-enabled=true

# SMTP Configuration for Camel (Alternative)
mail.smtp.host=smtp.sendgrid.net
mail.smtp.port=587
mail.smtp.username=apikey
mail.smtp.password=${sendgrid.api.key}
mail.smtp.starttls.enable=true
mail.smtp.auth=true

# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = moba

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create
#quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
quarkus.hibernate-orm.sql-load-script=import.sql
quarkus.datasource.reactive.url = vertx-reactive:postgresql://localhost:5433/postgres
#quarkus.datasource.reactive.url=postgresql://localhost:5433/postgres
quarkus.datasource.reactive.max-size=20
# Dialect configuration for PostgreSQL
quarkus.hibernate-orm.dialect=org.hibernate.dialect.PostgreSQLDialect

quarkus.oidc.discovery-enabled=true

#Keycloak
quarkus.oidc.auth-server-url=http://localhost:8080/realms/moba
quarkus.oidc.client-id=moba
quarkus.oidc.credentials.secret=yXv5eh0EiOID1SqLSdNsrSmZh3KTbjXP
quarkus.oidc.authorization-path=http://localhost:8080/realms/quarkus
#Tell Dev Services for Keycloak to import the realm file
#This property is not effective when running the application in JVM or native modes
#quarkus.keycloak.devservice.realm-path=keycloak.json

#Keycloak introspection
#quarkus.oidc.token.allow-jwt-introspection=true
#quarkus.oidc.token.require-jwt-introspection-only=true
#quarkus.oidc.introspection-path=http://localhost:8080/realms/moba/protocol/openid-connect/token/introspect;
#quarkus.oidc.introspection-credentials.name=moba
#quarkus.oidc.introspection-credentials.secrets=yXv5eh0EiOID1SqLSdNsrSmZh3KTbjXP

#Keycloack user client
#com.mhm.clients.KeycloakUserClient/mp-rest/scope=jakarta.inject.Singleton
#com.mhm.clients.KeycloakUserClient/mp-rest/uri=http://localhost:8080/realms/moba/protocol/openid-connect/token
quarkus.rest-client.keycloak-user-api.uri=http://localhost:8080/realms/moba/protocol/openid-connect/token

#User client
clients.org.acm.UserClient/mp-rest/scope=jakarta.inject.Singleton
org.eclipse.microprofile.rest.client.propagateHeader=Authorization
clients.org.acm.UserClient/mp-rest/uri=http://localhost:8080/admin/realms/moba
quarkus.rest-client.user-api.uri=http://localhost:8080/admin/realms/moba

#Keycloak Admin API client (comprehensive)
quarkus.rest-client.keycloak-admin-api.uri=http://localhost:8080

#quarkus.jackson.property-naming-strategy=SNAKE_CASE

# Disable OIDC for test profile
#%test.quarkus.oidc.enabled=false

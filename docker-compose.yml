version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: moba-postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-moba}
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-moba}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - moba-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-moba}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Keycloak Identity Provider
  keycloak:
    image: quay.io/keycloak/keycloak:23.0.0
    container_name: moba-keycloak
    environment:
      # Keycloak admin configuration
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      
      # Keycloak configuration
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: 8080
      KC_HOSTNAME_STRICT: "false"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      KC_HEALTH_ENABLED: "true"
      KC_METRICS_ENABLED: "true"
      
      # Development settings (disable in production)
      KC_LOG_LEVEL: INFO
    command: start-dev --http-relative-path=/auth
    ports:
      - "8080:8080"
    depends_on: []
    networks:
      - moba-network
    volumes:
      - keycloak_data:/opt/keycloak/data
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e \"GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MOBA Authorization Application
  moba-app:
    build:
      context: .
      dockerfile: Dockerfile.jvm
    container_name: moba-authorization
    environment:
      # Database configuration
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-moba}
      DB_URL: jdbc:postgresql://postgres:5432/${DB_NAME:-moba}
      QUARKUS_DATASOURCE_REACTIVE_URL: vertx-reactive:postgresql://postgres:5432/${DB_NAME:-moba}
      
      # SendGrid configuration
      SENDGRID_API_KEY: ${SENDGRID_API_KEY}
      SENDGRID_FROM_EMAIL: ${SENDGRID_FROM_EMAIL:-jankerov@gmail.com}
      SENDGRID_FROM_NAME: ${SENDGRID_FROM_NAME:-MOBA}
      
      # SMTP configuration (alternative to SendGrid)
      SMTP_USERNAME: ${SMTP_USERNAME:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      
      # JWT configuration
      JWT_SECRET: ${JWT_SECRET:-mySecretKeyThatShouldBeExternalizedInProductionEnvironment}
      
      # OIDC/Keycloak configuration
      OIDC_SECRET: ${OIDC_SECRET:-yXv5eh0EiOID1SqLSdNsrSmZh3KTbjXP}
      
      # Application configuration
      QUARKUS_HTTP_PORT: 8081
      QUARKUS_OIDC_AUTH_SERVER_URL: http://keycloak:8080/auth/realms/moba
      QUARKUS_OIDC_CLIENT_ID: moba-client
      QUARKUS_OIDC_CREDENTIALS_SECRET: 2HhxXwegWg1CSMz1nuDAFWTA3IehBuR2
      QUARKUS_REST_CLIENT_KEYCLOAK_ADMIN_API_URI: http://keycloak:8080/auth
      QUARKUS_REST_CLIENT_KEYCLOAK_USER_API_URI: http://keycloak:8080/auth/realms/master/protocol/openid-connect/token
      # Use master realm admin-cli for admin operations
      KEYCLOAK_MASTER_ADMIN_CLIENT_ID: admin-cli
      KEYCLOAK_MASTER_ADMIN_USERNAME: admin
      KEYCLOAK_MASTER_ADMIN_PASSWORD: admin123
      QUARKUS_REST_CLIENT_USER_API_URI: http://keycloak:8080/auth/admin/realms/moba
      # Admin credentials for token authentication
      KEYCLOAK_ADMIN_USERNAME: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KEYCLOAK_ADMIN_CLIENT_ID: admin-cli
      KEYCLOAK_ADMIN_REALM: master
      
      # Development/Production mode
      QUARKUS_PROFILE: ${QUARKUS_PROFILE:-dev}
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_started
    networks:
      - moba-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8081/q/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis (Optional - for caching and sessions)
  redis:
    image: redis:7-alpine
    container_name: moba-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - moba-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Nginx (Optional - for reverse proxy and load balancing)
  nginx:
    image: nginx:alpine
    container_name: moba-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - moba-app
    networks:
      - moba-network
    profiles:
      - production

# Networks
networks:
  moba-network:
    driver: bridge
    name: moba-network

# Volumes for persistent data
volumes:
  postgres_data:
    driver: local
    name: moba-postgres-data
  keycloak_data:
    driver: local  
    name: moba-keycloak-data
  redis_data:
    driver: local
    name: moba-redis-data
  app_logs:
    driver: local
    name: moba-app-logs 